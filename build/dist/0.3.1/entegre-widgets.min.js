// EntegreJS -- http://entegre.io
"use strict";
E.widget.flagicon = class extends E.factory.node {
constructor(country) {
super('i');
this.attr('class',`flag-icon flag-icon-${this.valid(country)}`);
}
static css() {
return 'https:/' + '/cdnjs.cloudflare.com/ajax/libs/flag-icon-css/1.0.0/css/flag-icon.min.css';
}
static flags() {
return[ 'ad','ae','af','ag','ai','al','am','ao','aq','ar','as','at','au','aw','ax','az',
'ba','bb','bd','be','bf','bg','bh','bi','bj','bl','bm','bn','bo','bq','br','bs',
'bt','bv','bw','by','bz','ca','cc','cd','cf','cg','ch','ci','ck','cl','cm','cn',
'co','cr','cu','cv','cw','cx','cy','cz','de','dj','dk','dm','do','dz','ec','ee',
'eg','eh','er','es','et','fi','fj','fk','fm','fo','fr','ga','gb','gd','ge','gf',
'gg','gh','gi','gl','gm','gn','gp','gq','gr','gs','gt','gu','gw','gy','hk','hm',
'hn','hr','ht','hu','id','ie','il','im','in','io','iq','ir','is','it','je','jm',
'jo','jp','ke','kg','kh','ki','km','kn','kp','kr','kw','ky','kz','la','lb','lc',
'li','lk','lr','ls','lt','lu','lv','ly','ma','mc','md','me','mf','mg','mh','mk',
'ml','mm','mn','mo','mp','mq','mr','ms','mt','mu','mv','mw','mx','my','mz','na',
'nc','ne','nf','ng','ni','nl','no','np','nr','nu','nz','om','pa','pe','pf','pg',
'ph','pk','pl','pm','pn','pr','ps','pt','pw','py','qa','re','ro','rs','ru','rw',
'sa','sb','sc','sd','se','sg','sh','si','sj','sk','sl','sm','sn','so','sr','ss',
'st','sv','sx','sy','sz','tc','td','tf','tg','th','tj','tk','tl','tm','tn','to',
'tr','tt','tv','tw','tz','ua','ug','um','us','uy','uz','va','vc','ve','vg','vi',
'vn','vu','wf','ws','ye','yt','za','zm','zw','eu','gb-eng','gb-sct','gb-wls'
];
}
valid(country) {
country = country.toString().toLowerCase();
if(E.widget.flagicon.flags().includes(country)) {
return country;
}
return '';
}
square() {
this.attr('class','flag-icon-squared');
return this;
}
};
E.widget.fontawesome = class extends E.factory.node {
constructor(icon) {
super('i');
this.attr('class',`fa fa-${icon.toString().toLowerCase()}`);
}
static css() {
return 'https:/' + '/maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css';
}
size(size) {
if(!E.empty(size)) {
var sizes =[ 'lg','2x','3x','4x','5x'];
size = size.toString().toLowerCase();
if(sizes.includes(size)) {
this.attr('class',`fa-${size}`);
}
}
return this;
}
fixedwidth() {
this.attr('class','fa-fw');
return this;
}
border() {
this.attr('class','fa-border');
return this;
}
rotate(angle) {
angle = parseInt(angle);
if(angle >= 0 && angle <= 360) {
this.attr('class',`fa-rotate-${angle}`);
}
return this;
}
flip(dir) {
if(!E.empty(dir)) {
switch(dir.toString().toLowerCase()) {
case 'h':
case 'horz':
dir = 'horizontal';
break;
case 'v':
case 'vert':
dir = 'vertical';
break;
}
if(dir in[ 'horizontal','vertical']) {
this.attr('class',`fa-flip-${dir}`);
}
}
return this;
}
};
E.widget.gravatar = class {
constructor(email,size) {
this.e = '';
this.s = '';
this.email(email);
this.size(size);
}
static js() {
return 'https:/' + '/cdnjs.cloudflare.com/ajax/libs/blueimp-md5/2.1.0/js/md5.min.js';
}
email(s) {
if(s && !E.empty(s)) {
this.e = s.toString().toLowerCase();
}
return this;
}
size(s) {
if(s) {
this.s = s.toString();
}
return this;
}
uri() {
return 'http:/' + '/www.gravatar.com/avatar/' + md5(this.e) + (!E.empty(this.s) ? '?s=' + this.s:'');
}
build() {
var x = new E.factory.node('img',{'class':'e-gravatar'});
x.attr('src',this.uri());
return x.build();
}
toString() {
return this.build();
}
append(t) {
if(!E.empty(t)) {
$(t).append(this.build());
}
return this;
}
};
E.widget.highlight = class extends E.factory.node {
constructor(attr,children) {
super('pre',attr,children);
this.attr('class','e-highlight');
}
static css() {
return 'https:/' + '/cdnjs.cloudflare.com/ajax/libs/highlight.js/9.1.0/styles/default.min.css';
}
static js() {
return 'https/' + '/cdnjs.cloudflare.com/ajax/libs/highlight.js/9.1.0/highlight.min.js';
}
block(lang,str) {
if(!E.empty(lang) && !E.empty(str)) {
lang = lang.toString().toLowerCase();
str = window.hljs ? hljs.highlight(lang,str.toString()).value:str.toString();
this.child(new E.factory.node('code',{'class':lang},str));
}
return this;
}
};
E.widget.mustache = class {
constructor() {
this.c =[];
}
static js() {
return 'https:/' + '/cdnjs.cloudflare.com/ajax/libs/mustache.js/2.2.1/mustache.min.js';
}
child(template,data) {
if(!E.empty(template) && !E.empty(data)) {
this.c.push({'template':template,'data':data});
}
return this;
}
build() {
if(window.Mustache) {
var x =[];
for(var i in this.c) {
x.push(Mustache.render(this.c[ i].template,this.c[ i].data));
}
return x.join('');
}
return '';
}
toString() {
return this.build();
}
append(t) {
if(!E.empty(t)) {
$(t).append(this.build());
}
return this;
}
};
E.widget.octicon = class extends E.factory.node {
constructor(icon) {
super('i');
this.attr('class',`octicon-${icon.toString().toLowerCase()}`);
this.omega = false;
}
static css() {
return 'https:/' + '/cdnjs.cloudflare.com/ajax/libs/octicons/3.4.1/octicons.min.css';
}
mega() {
this.omega = true;
return this;
}
build() {
this.attr('class',`${(this.omega ? 'mega-':'')}octicon`); 
return super.build();
}
};
E.widget.weathericon = class extends E.factory.node {
constructor(icon) {
super('i');
this.attr('class',`wi wi-${icon}`);
}
static css() {
return[
'https:/' + '/cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.10/css/weather-icons.min.css',
'https:/' + '/cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.10/css/weather-icons-wind.min.css'
];
}
flip(dir) {
dir = dir.toString().toLowerCase();
var h =[ 'horizontal','h','horz'];
var v =[ 'vertical','v','vert'];
if(h.includes(dir)) {
dir = h[0];
} else if(v.includes(dir)) {
dir = v[0];
} else {
dir = null;
}
if(!E.empty(dir)) {
this.attr('class',`wi-flip-${dir}`);
}
return this;
}
rotate(angle) {
angle = parseInt(angle);
if(angle in[ 90,180,270]) {
this.attr('class',`wi-rotate-${angle}`);
}
return this;
}
fixedwidth() {
this.attr('class','wi-fw');
return this;
}
wind() {
this.attr('class','wi-wind');
return this;
}
};