// EntegreJS -- http://entegre.io
"use strict";
E.control.bootswatch = class {
constructor() {
$('head').append('<link rel="stylesheet" id="e-bootswatch">');
}
static themes() {
return[ 'cerulean','cosmo','cyborg','darkly','flatly','journal','lumen','paper','readable',
'sandstone','simplex','slate','spacelab','superhero','united','yeti'];
}
url(t) {
return 'https:/'+'/maxcdn.bootstrapcdn.com/bootswatch/3.3.6/'+t+'/bootstrap.min.css';
}
load(u) {
$('link#e-bootswatch').attr('href',u);
}
clear() {
this.load(null);
}
theme(t) {
t = !E.empty(t) ? t.toString().toLowerCase():null;
if(E.control.bootswatch.themes().includes(t)) {
this.load(this.url(t));
}
return this;
}
};
E.control.datatable = class extends E.factory.paginated {
constructor() {
super();
this.col =[];
this.id = E.id();
var self = this;
E.events.listen(`${this.id}:pager`,function(i) {self.update(i);});
}
column(label) {
if(!E.empty(label)) {
this.col.push(label);
}
return this;
}
row(data) {
if(!E.empty(data) && E.type(data,'array')) {
super.item(data);
}
return this;
}
update(i) {
var r = this.data(i);
var x =[];
for(var i1 in r) {
var y = new E.factory.node('tr');
for(var i2 in r[ i1]) {
y.child(new E.factory.node('td',null,r[ i1][ i2]));
}
x.push(y.build());
}
$('div[data-instance="' + this.id + '"] tbody').empty().append(x.join());
this.updatestatus(this.id);
this.updatecontrols(this.id);
}
build() {
var x = new E.tag.div({'class':'e-datatable e-pagination-instance','data-instance':this.id});
var y = new E.widget.table().headers(this.col).hover();
x.child(new E.tag.div({'class':'row'},new E.tag.div({'class':'col-xs-12'},y)));
y = new E.tag.div({'class':'col-xs-6'},this._status());
var z = new E.tag.div({'class':'col-xs-6 text-right'},this._controls());
x.child(new E.tag.div({'class':'row'},[ y,z]));
return x.build();
}
};
E.control.dataview = class extends E.factory.paginated {
constructor() {
super();
this.ocolumns = 4;
this.otemplate = '';
this.ocallback = '';
this.id = E.id();
var self = this;
E.events.listen(`${this.id}:pager`,function(i) {self.update(i);});
}
columns(i) {
this.ocolumns = parseInt(i);
return this;
}
template(x) {
if(!E.empty(x)) {
this.otemplate = x.toString();
}
return this;
}
callback(x) {
if(!E.empty(x) && E.type(x,'function')) {
this.ocallback = x;
}
return this;
}
rows(x) {
if(!E.empty(x) && E.type(x,'array')) {
this.d = x;
}
return this;
}
_renderitem(x) {
if(x) {
if(!E.empty(this.otemplate) && window.Mustache) {
return Mustache.render(this.otemplate,x);
} else if(!E.empty(this.ocallback)) {
return this.ocallback(x);
} else if(x.build) {
return x.build();
} else if(x.toString) {
return x.toString();
} else {
return x;
}
}
return '';
}
update(i) {
var r = E.chunk(this.data(i),this.ocolumns);
var x =[];
for(var i1 in r) {
var y = new E.factory.node('tr');
for(var i2 in r[ i1]) {
y.child(new E.factory.node('td',null,this._renderitem(r[ i1][ i2])));
}
x.push(y.build());
}
$('div[data-instance="' + this.id + '"] tbody').empty().append(x.join());
this.updatestatus(this.id);
this.updatecontrols(this.id);
}
build() {
var x = new E.tag.div({'class':'e-dataview e-pagination-instance','data-instance':this.id});
var y = new E.factory.node('table',{'style':'width:100%'});
y.child(new E.factory.node('tbody'));
x.child(new E.tag.div({'class':'row'},new E.tag.div({'class':'col-xs-12'},y)));
y = new E.tag.div({'class':'col-xs-6'},this._status());
var z = new E.tag.div({'class':'col-xs-6 text-right'},this._controls());
x.child(new E.tag.div({'class':'row'},[ y,z]));
return x.build();
}
};
E.control.notifications = class {
constructor() {
this.id = E.id();
this.m = 'bubble';
this.timers = {};
this.t = 3;
}
bubble() {
this.m = 'bubble';
return this;
}
bar() {
this.m = 'bar';
return this;
}
embed() {
this.m = 'embed';
return this;
}
delay(i) {
if(i) {
this.t = parseInt(i);
}
return this;
}
clear(i) {
if(i && this.timers[ i]) {
window.clearTimeout(this.timers[ i]);
$('#' + i).remove();
return true;
}
return false;
}
post(m,c,t) {
var id = E.id();
var x = $E('alert').mode(m).attr('id',id);
if(c && !E.empty(c)) {
x.callout(c).child(this.m == 'bubble' ? '<br>':' ');
}
if(t && !E.empty(t)) {
x.child(t);
}
x = x.build();
$('#' + this.id).append(x);
var self = this;
this.timers[ id] = window.setTimeout(function(x) {self.clear(x);},(this.t * 1000),id);
}
success(c,t) {
this.post('success',c,t);
}
info(c,t) {
this.post('info',c,t);
}
warning(c,t) {
this.post('warning',c,t);
}
danger(c,t) {
this.post('danger',c,t);
}
build() {
var x = new E.tag.div({'class':'e-notifications e-notifications-' + this.m,'id':this.id});
var y;
switch(this.m) {
case 'bar':
y = "position:absolute; top:0; left:0; right:0; z-index:9999;";
break;
case 'embed':
y = "position:relative; top:0; left:0; right:0; z-index:9999;";
break;
case 'bubble':
default:
y = "position:absolute; top:10px; right:10px; z-index:9999; width:200px; overflow:hidden;";
break;
}
x.attr('style',y);
return x.build();
}
toString() {
return this.build();
}
append(t) {
t = this.m == 'bubble' || E.empty(t) ? 'body':t;
if(!E.empty(t)) {
$(t).append(this.build());
}
return this;
}
};
E.control.timeline = class extends E.factory.iterable {
constructor(attr,children) {
super();
this.attr(attr);
this.child(children);
this.db = null;
this.de = null;
}
begin(d) {
this.db = moment(d);
return this;
}
end(d) {
this.de = moment(d);
return this;
}
event(label,begin,end,mode) {
var x = {
'label':E.empty(label) ? null:label,
'begin':E.empty(begin) ? null:moment(begin),
'end':E.empty(end) ? null:moment(end),
'offset':0,
'length':0,
'mode':'default'
};
if(!E.empty(mode)) {
mode = mode.toString().toLowerCase();
if(E.bootstrap.modes.includes(mode)) {
x.mode = mode;
}
}
if(!E.empty(x.begin) && !E.empty(this.db)) {
x.offset = x.begin.diff(this.db);
}
if(!E.empty(x.begin) && !E.empty(x.end)) {
x.length = x.end.diff(x.begin);
}
this.child(x);
return this;
}
build() {
this.length = (!E.empty(this.db) && !E.empty(this.de)) ? this.de.diff(this.db):0;
var x = new E.tag.div({'class':'e-timeline'});
for(var i in this.c) {
var c = this.c[ i];
var r = new E.tag.div({'class':'row'});
r.child(new E.tag.div({'class':'col-xs-6 col-md-4 text-nowrap text-right e-timeline-label'},c.label));
var p = new E.widget.progressbar();
if(c.offset > 0) {
p.bar(0,this.length,c.offset,'offset');
}
p.bar(0,this.length,c.length,c.mode);
r.child(new E.tag.div({'class':'col-xs-6 col-md-8'},p));
x.child(r);
}
return x.build();
}
append(t) {
if(!E.empty(t)) {
$(t).append(this.build());
}
return this;
}
};
E.control.tree = class extends E.factory.iterable {
constructor(attr,children) {
super();
this.attr(attr);
this.child(children);
}
branch(label,tree) {
if(!E.empty(label) && tree instanceof E.control.tree) {
this.child(new E.factory.treebranch(label,tree));
}
return this;
}
build(id) {
if(!E.empty(id)) {
this.attr('id',id);
this.attr('class','collapse');
}
var x = E.node('ul',this.a);
x.attr('style',"list-style-type:none;");
if(!E.empty(this.c)) {
for(var i in this.c) {
var c = this.c[ i];
var y = E.node('li');
if(c instanceof E.factory.treebranch) {
var n = E.id('et');
var z = new E.widget.glyphicon('chevron-right',{'id':`${n}-i`});
y.child(new E.tag.a({'class':'e-tree-toggle','href':`#${n}` ,'data-toggle':'collapse','aria-expanded':'false','aria-controls':n},z));
y.child(' ');
y.child(c.label());
y.child(c.items().build(n));
} else {
y.child(c);
}
x.child(y);
}
}
x = new E.tag.div({'class':'e-tree'},x);
return x.build();
}
append(t) {
if(!E.empty(t)) {
$(t).append(this.build());
}
return this;
}
};
E.factory.treebranch = class {
constructor(label,items) {
this.l = null;
this.i = null;
this.label(label);
this.items(items);
}
label(x) {
if(E.empty(x)) {
return this.l;
} else {
this.l = x;
}
return this;
}
items(x) {
if(E.empty(x)) {
return this.i;
} else {
this.i = x instanceof E.control.tree ? x:null;
}
return this;
}
};
$(function() {
$('body').on('click','.e-tree a.e-tree-toggle',function() {
var cr = 'glyphicon-chevron-right';
var cd = 'glyphicon-chevron-down';
var a = ($(this).attr('aria-expanded') == 'false');
var i = $(this).children('.glyphicon');
i.removeClass(cr).removeClass(cd).addClass(a ? cd:cr);
$(this).blur();
});
});